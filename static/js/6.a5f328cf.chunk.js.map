{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.tsx"],"names":["module","exports","Paragraph","Typography","LoginForm","login","isWrongAuth","message","captchaUrl","Form","useForm","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","username","password","captcha","console","log","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","Password","className","s","error","valuePropName","offset","src","alt","type","htmlType","LoginPage","useSelector","getCaptchaUrlSelector","getAuthErrorMessage","getIsWrongAuth","isAuth","getIsAuth","dispatch","useDispatch","to","style","height","maxWidth","padding","copyable","email","rememberMe"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,gKCOnDC,EAAcC,IAAdD,UAeFE,EAAsC,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAEvE,EAAeC,IAAKC,UAApB,oBAWA,OACI,eAAC,IAAD,CACIC,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAfS,SAACC,GACdb,EAAMa,EAAOC,SAAUD,EAAOE,SAAUF,EAAOF,SAAUE,EAAOG,SAChEC,QAAQC,IAAIL,IAcRM,eAXe,SAACC,GACpBH,QAAQC,IAAI,UAAWE,IAWnBC,aAAa,MAPjB,UASI,cAAC,IAAKC,KAAN,CACIC,MAAM,QACNjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMvB,QAAS,gCAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKoB,KAAN,CACIC,MAAM,WACNjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMvB,QAAS,gCAHvC,SAKI,cAAC,IAAMwB,SAAP,MAGHzB,GAAe,mBAAG0B,UAAWC,IAAEC,MAAhB,SAAwB3B,IAExC,cAAC,IAAKoB,KAAN,CAAWhB,KAAK,WAAWwB,cAAc,UAAUrB,WAAY,CAAEsB,OAAQ,EAAGvB,KAAM,IAAlF,SACI,cAAC,IAAD,4BAEJ,gCACKL,GAAc,qBAAK6B,IAAK7B,EAAY8B,IAAI,YACxC9B,GAAc,cAAC,IAAKmB,KAAN,CACPC,MAAM,qBACNjB,KAAK,UACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMvB,QAAS,oCAH5B,SAKP,cAAC,IAAD,SAGZ,cAAC,IAAKoB,KAAN,CAAWb,WAAY,CAAEsB,OAAQ,EAAGvB,KAAM,IAA1C,SACI,cAAC,IAAD,CAAQ0B,KAAK,UAAUC,SAAS,SAAhC,yBAmCDC,UA3Ba,WAExB,IAAMjC,EAAYkC,YAAYC,KACxBpC,EAASmC,YAAYE,KACrBtC,EAAaoC,YAAYG,KACzBC,EAAQJ,YAAYK,KAEpBC,EAAWC,cAMjB,OAAIH,EACO,cAAC,IAAD,CAAUI,GAAI,aAGlB,sBAAMC,MAAO,CAACC,OAAQ,QAASC,SAAU,IAAKC,QAAS,aAAvD,UACC,gCACI,wGACA,uCAAa,cAACpD,EAAD,CAAWqD,UAAQ,EAAnB,gCACb,0CAAgB,cAACrD,EAAD,CAAWqD,UAAQ,EAAnB,qBAEpB,cAACnD,EAAD,CAAWC,MAdD,SAACmD,EAAepC,EAAkBqC,EAAqBpC,GACrE2B,EAAS3C,YAAMmD,EAAOpC,EAAUqC,EAAYpC,KAaXf,YAAaA,EAAaC,QAASA,EAASC,WAAYA","file":"static/js/6.a5f328cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Login_content__1VRwD\",\"error\":\"Login_error__6W4iA\"};","import React from \"react\"\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {login} from \"../../redux/auth-reducer\"\r\nimport {getAuthErrorMessage, getCaptchaUrlSelector, getIsAuth, getIsWrongAuth} from \"../../redux/auth-selectors\"\r\nimport {Button, Checkbox, Form, Input, Typography} from 'antd'\r\n\r\nconst { Paragraph } = Typography;\r\n\r\ntype FormData = {\r\n    username: string\r\n    password: string\r\n    remember: boolean\r\n    captcha?: string\r\n}\r\ntype LoginFormProps = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | undefined) => void\r\n    isWrongAuth: boolean\r\n    message: string | null\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<LoginFormProps> = ({login, isWrongAuth, message, captchaUrl}) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: FormData) => {\r\n        login(values.username, values.password, values.remember, values.captcha)\r\n        console.log(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{ remember: false }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n        >\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"username\"\r\n                rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            {/*<p className={s.error}>{errorInfo.password?.message}</p>*/}\r\n            {isWrongAuth && <p className={s.error}>{message}</p>}\r\n\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n            <div>\r\n                {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n                {captchaUrl && <Form.Item\r\n                        label=\"Symbols from image\"\r\n                        name=\"captcha\"\r\n                        rules={[{ required: true, message: 'Please input symbols from image' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>}\r\n            </div>\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst LoginPage: React.FC = () => {\r\n\r\n    const captchaUrl= useSelector(getCaptchaUrlSelector)\r\n    const message= useSelector(getAuthErrorMessage)\r\n    const isWrongAuth= useSelector(getIsWrongAuth)\r\n    const isAuth= useSelector(getIsAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loginFunc = (email: string, password: string, rememberMe: boolean, captcha: string | undefined) => {\r\n        dispatch(login(email, password, rememberMe, captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div  style={{height: '100vh', maxWidth: 800, padding: '50px 50px'}}>\r\n            <div>\r\n                <h2>Тестовые Email и Password</h2>\r\n                <b>Email:</b><Paragraph copyable>free@samuraijs.com</Paragraph>\r\n                <b>Password:</b><Paragraph copyable>free</Paragraph>\r\n            </div>\r\n            <LoginForm login={loginFunc} isWrongAuth={isWrongAuth} message={message} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nexport default LoginPage"],"sourceRoot":""}